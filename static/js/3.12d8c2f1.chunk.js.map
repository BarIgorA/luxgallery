{"version":3,"sources":["components/ModalPhoto/index.tsx","components/Photo/index.tsx","components/Photos/SearchResults/index.tsx","components/ModalPhoto/styles.module.scss","components/Photo/styles.module.scss","components/Photos/SearchResults/styles.module.scss"],"names":["observer","photo","isPhotoExpanded","Portal","lazy","fallback","className","styles","ResizableImage","src","url","alt","title","onClick","hideMe","Photo","thumbnailUrl","id","showMe","ref","useRef","observerInContext","useContext","IntersectionObserverContext","useEffect","div","current","observe","unobserve","key","data-src","lazyImage","SearchResults","photos","searchTerm","isAllLoaded","filteredPhotos","filter","includes","memoizedNothingFound","useMemo","NothingFound","Grid","length","map","module","exports"],"mappings":"yHAAA,oDA8BeA,uBApBoB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACpC,IAAKA,IAAUA,EAAMC,gBAAiB,OAAO,KAE7C,IAAMC,EAASC,gBAAK,kBAAM,gCAE1B,OACE,kBAAC,WAAD,CAAUC,SAAS,cACjB,kBAACF,EAAD,KACE,yBACEG,UAAWC,IAAOC,eAClBC,IAAKR,EAAMS,IACXC,IAAKV,EAAMW,MACXC,QAASZ,EAAMa,SAEjB,yBAAKR,UAAWC,IAAOK,OAAQX,EAAMW,a,gCCxB7C,4DA+CeG,UAhCW,SAAC,GAAe,IAAbd,EAAY,EAAZA,MACnBe,EAAoCf,EAApCe,aAAcC,EAAsBhB,EAAtBgB,GAAIL,EAAkBX,EAAlBW,MAAOM,EAAWjB,EAAXiB,OAC3BC,EAAMC,iBAA8B,MACpCC,EAAoBC,qBAAWC,KAerC,OAbAC,qBAAU,WACR,IAAMxB,EAAWqB,EACXI,EAAMN,EAAIO,QAEhB,GAAID,GAAOzB,EAGT,OAFAA,EAAS2B,QAAQF,GAEV,WACLzB,EAAS4B,UAAUH,MAGtB,CAACJ,IAGF,yBAAKQ,IAAKZ,EAAIX,UAAWC,IAAOQ,MAAOI,IAAKA,EAAKW,WAAUd,GACzD,yBACEV,UAAWC,IAAOwB,UAClBtB,IAAI,GACJE,IAAKC,EACLA,MAAOA,EACPC,QAASK,IAEX,kBAAC,UAAD,CAAYjB,MAAOA,O,gCC1CzB,oDAqCe+B,UAzB2E,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YACzGC,EAAiBH,EAAOI,QAAO,SAAApC,GAAK,OAAIA,EAAMW,MAAM0B,SAASJ,MAC7DK,EAAuBC,mBAAQ,kBACnC,yBAAKlC,UAAWC,IAAOkC,cAEnBN,EACI,iBACA,uCAGP,CAACA,IAEJ,OACE,yBAAK7B,UAAWC,IAAOmC,MAEnBN,EAAeO,OACbP,EAAeQ,KAAI,SAAC3C,GAAD,OACjB,kBAAC,UAAD,CAAO4B,IAAK5B,EAAMgB,GAAIhB,MAAOA,OAE/BsC,K,mBC9BVM,EAAOC,QAAU,CAAC,eAAiB,+BAA+B,MAAQ,wB,mBCA1ED,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,UAAY,4B,mBCA5DD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,MAAQ,sBAAsB,aAAe","file":"static/js/3.12d8c2f1.chunk.js","sourcesContent":["import React, { FC, lazy, Suspense } from 'react';\nimport { observer } from 'mobx-react';\n\n// Interfaces\nimport { IModalPhoto } from '../../interfaces';\n\n// Styles\nimport styles from './styles.module.scss';\n\n\nconst ModalPhoto:FC<IModalPhoto> = ({ photo }) => {\n  if (!photo || !photo.isPhotoExpanded) return null;\n\n  const Portal = lazy(() => import('./Portal'));\n\n  return (\n    <Suspense fallback='loading...'>\n      <Portal>\n        <img\n          className={styles.ResizableImage}\n          src={photo.url}\n          alt={photo.title}\n          onClick={photo.hideMe}\n        />\n        <div className={styles.title}>{photo.title}</div>\n      </Portal>\n    </Suspense>\n  )\n}\n\nexport default observer(ModalPhoto);\n","import React, { FC, useContext, useRef, useEffect } from 'react';\n\n// Interfaces\nimport { IPhoto } from '../../interfaces';\n\n// Context\nimport IntersectionObserverContext from '../../contextProviders/IntersectionObserverContext';\n\n// Custom\nimport ModalPhoto from '../ModalPhoto';\n\n// Styles\nimport styles from './styles.module.scss';\n\n\nconst Photo: FC<IPhoto> = ({ photo }) => {\n  const { thumbnailUrl, id, title, showMe } = photo;\n  const ref = useRef<HTMLDivElement | null>(null);\n  const observerInContext = useContext(IntersectionObserverContext);\n\n  useEffect(() => {\n    const observer = observerInContext;\n    const div = ref.current;\n\n    if (div && observer) {\n      observer.observe(div);\n\n      return () => {\n        observer.unobserve(div);\n      };\n    }\n  }, [observerInContext]);\n\n  return (\n    <div key={id} className={styles.Photo} ref={ref} data-src={thumbnailUrl} >\n      <img\n        className={styles.lazyImage}\n        src=''\n        alt={title}\n        title={title}\n        onClick={showMe}\n      />\n      <ModalPhoto photo={photo} />\n    </div>\n  )\n}\n\nexport default Photo;\n","import React, { FC, useMemo } from 'react';\n\n// Interfaces\nimport { TPhoto } from '../../../interfaces';\n\n//Custom components\nimport Photo from '../../Photo';\n\n// Styles\nimport styles from './styles.module.scss';\n\n\nconst SearchResults: FC<{ photos: TPhoto[], searchTerm: string, isAllLoaded: boolean }> = ({ photos, searchTerm, isAllLoaded }) => {\n  const filteredPhotos = photos.filter(photo => photo.title.includes(searchTerm));\n  const memoizedNothingFound = useMemo(() => (\n    <div className={styles.NothingFound}>\n      {\n        isAllLoaded\n          ? 'Nothing found.'\n          : 'Nothing to show yet! Wait please.'\n      }\n    </div>\n  ), [isAllLoaded]);\n\n  return (\n    <div className={styles.Grid}>\n      {\n        filteredPhotos.length\n        ? filteredPhotos.map((photo) => (\n            <Photo key={photo.id} photo={photo} />\n          ))\n        : memoizedNothingFound\n      }\n    </div>\n  );\n}\n\nexport default SearchResults;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ResizableImage\":\"styles_ResizableImage__1hPNU\",\"title\":\"styles_title__2VxPG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Photo\":\"styles_Photo__XcYKp\",\"lazyImage\":\"styles_lazyImage__2NZD4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Grid\":\"styles_Grid__1IOYs\",\"photo\":\"styles_photo__OJeUQ\",\"NothingFound\":\"styles_NothingFound__34BBq\"};"],"sourceRoot":""}